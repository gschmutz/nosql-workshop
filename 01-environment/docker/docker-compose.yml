# =======================================================================
# Platform Name            nosql-platform
# Platform Stack:          trivadis/platys-modern-data-platform
# Platform Stack Version:  develop
# =======================================================================
networks:
  default:
    name: nosql-platform
services:
  #  ================================== Jupyter ========================================== #
  jupyter:
    image: jupyter/minimal-notebook:latest
    container_name: jupyter
    hostname: jupyter
    labels:
      com.platys.name: jupyter
      com.platys.description: Web-based interactive development environment for notebooks, code, and data
      com.platys.webui.title: Jupyter UI
      com.platys.webui.url: http://dataplatform:28888
      com.platys.password.envvars: PLATYS_JUPYTER_TOKEN,PLATYS_AWS_SECRET_ACCESS_KEY
    ports:
      - 28888:8888
    user: root
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      JUPYTER_ENABLE_LAB: "'yes'"
      GRANT_SUDO: "'yes'"
      JUPYTER_TOKEN: ${PLATYS_JUPYTER_TOKEN:-abc123!}
      DOCKER_STACKS_JUPYTER_CMD: lab
      MAVEN_DOWNLOAD_JARS: com.amazonaws:aws-java-sdk-bundle:1.11.375,org.apache.hadoop:hadoop-aws:3.2.1,com.google.guava:guava:14.0.1
      # remove some JARS if they are conflicting with the ones installed above
      REMOVE_JARS: guava-14.0.1.jar
    volumes:
      - ./data-transfer:/data-transfer
      - ./init/jupyter/on-startup-jupyter/:/usr/local/bin/start-notebook.d/
      - ./init/jupyter/on-startup-jupyter-finished/:/usr/local/bin/before-notebook.d/
      - ./init/jupyter/on-startup-notebook-kernel:/home/jovyan/.ipython/profile_default/startup/
      - ./scripts/docker/maven-download.sh:/maven-download.sh
    command:
      # In the command section, $ are replaced with $$ to avoid the error 'Invalid interpolation format for "command" option'
      - bash
      - -c
      - |
        conda create -y --name py312 python=3.12.8
        source /opt/conda/etc/profile.d/conda.sh
        conda activate py312
        pip install ipykernel    
        python -m ipykernel install --user --name py312 --display-name "Python 3.12.8 (ipykernel)"
        start-notebook.sh
    restart: unless-stopped
  #  ================================== MongoDB ========================================== #
  mongo-1:
    image: mongo:8
    container_name: mongo-1
    hostname: mongo-1
    labels:
      com.platys.name: mongodb
      com.platys.description: Document NoSQL database
      com.platys.password.envvars: PLATYS_MONGO_PASSWORD
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=${PLATYS_MONGO_PASSWORD:-abc123!}
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/data/log
    volumes:
      - ./data-transfer:/data-transfer
      # seeding scripts
      - ./init/mongodb:/docker-entrypoint-initdb.d
    restart: unless-stopped
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    hostname: mongo-express
    labels:
      com.platys.name: mongo-express
      com.platys.description: MongoDB UI
      com.platys.webui.title: Mongo Express UI
      com.platys.webui.url: http://dataplatform:28123
      com.platys.password.envvars: PLATYS_MONGO_EXPRESS_PASSWORD
    ports:
      - 28123:8081
    environment:
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_URL=mongodb://root:${PLATYS_MONGO_PASSWORD:-abc123!}@mongo-1:27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${PLATYS_MONGO_PASSWORD:-abc123!}
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_BASICAUTH=false
      - ME_CONFIG_OPTIONS_EDITORTHEME=default
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  #  ================================== Elasticsearch ========================================== #
  elasticsearch-1:
    image: elasticsearch:8.17.4
    hostname: elasticsearch-1
    container_name: elasticsearch-1
    labels:
      com.platys.name: elasticsearch
      com.platys.description: Search-engine NoSQL store
      com.platys.restapi.title: Elasticsearch REST API
      com.platys.restapi.url: http://dataplatform:9200
      com.platys.manual.step.msgs: sudo sysctl -w vm.max_map_count=262144
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      xpack.monitoring.collection.enabled: 'false'
      xpack.security.http.ssl.enabled: false
      xpack.security.transport.ssl.enabled: false
      http.cors.enabled: 'true'
      http.cors.allow-origin: http://${DOCKER_HOST_IP}:28275,http://${PUBLIC_IP}:28275,http://dejavu:1358,http://dataplatform:28125,http://dataplatform:28125,http://${PUBLIC_IP}:28125,http://${DOCKER_HOST_IP}:28125,http://127.0.0.1:1358
      http.cors.allow-headers: X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      http.cors.allow-credentials: 'true'
      cluster.routing.allocation.disk.threshold_enabled: 'true'
      cluster.routing.allocation.disk.watermark.low: 2gb
      cluster.routing.allocation.disk.watermark.high: 1gb
      cluster.routing.allocation.disk.watermark.flood_stage: 512mb
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
    healthcheck:
      test:
        - CMD-SHELL
        - curl -s http://localhost:9200/_cat/health?h=status | grep -q green
      retries: 300
      interval: 10s
  #  ================================== ElasticVue ========================================== #
  elasticvue:
    image: cars10/elasticvue:latest
    container_name: elasticvue
    hostname: elasticvue
    labels:
      com.platys.name: elasticvue
      com.platys.description: UI for Elasticsearch
      com.platys.webui.title: ElasticVue UI
      com.platys.webui.url: http://dataplatform:28275
    ports:
      - 28275:8080
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  #  ================================== Kibana ========================================== #
  kibana:
    image: kibana:8.17.4
    hostname: kibana
    container_name: kibana
    labels:
      com.platys.name: kibana
      com.platys.description: Visualization for Elasticsearch
      com.platys.webui.title: Kibana UI
      com.platys.webui.url: http://dataplatform:5601
    depends_on:
      - elasticsearch-1
    ports:
      - 5601:5601
    environment:
      discovery.type: single-node
      ELASTICSEARCH_HOSTS: http://elasticsearch-1:9200
      SERVER_HOST: 0.0.0.0
      SERVER_NAME: kibana
      XPACK_GRAPH_enabled: 'false'
      XPACK_MONITORING_enabled: 'false'
      XPACK_REPORTING_enabled: 'false'
      XPACK_SECURITY_enabled: 'false'
    volumes:
      - ./data-transfer:/data-transfer
    command: [/bin/bash, -c, /usr/share/kibana/bin/kibana-plugin remove x-pack; /usr/local/bin/kibana-docker]
    restart: unless-stopped
    healthcheck:
      test: curl --cacert /ca/ca.crt -s https://localhost:5601 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      retries: 600
  kibana-init:
    image: alpine/curl
    container_name: kibana-init
    hostname: kibana-init
    depends_on: {kibana: {condition: service_healthy}}
    volumes:
      - ./data-transfer:/data-transfer
      - ./init/kibana/dashboards:/dashboards
    entrypoint:
      - sh
      - -c
      - |
        echo "Installing Kibana Dashboards"
        for file in /dashboards/*.ndjson;
        do
          if [ -f "$file" ]; then
            echo "Uploading dashboard: $file"        
            response=$(curl -s -o /dev/null -X POST -u $$ELASTICSEARCH_USERNAME:$$ELASTICSEARCH_PASSWORD -F 'file=@/dashboards/$$dashboard.ndjson' -H 'kbn-xsrf:reporting' "http://kibana:5601/api/saved_objects/_import?overwrite=true")
          else
            echo "No .ndjson files found in $DASHBOARD_DIR"
          fi
        done
    restart: no
    init: true
  #  ================================== Neo4J ========================================== #
  neo4j-1:
    image: neo4j:5.26
    hostname: neo4j-1
    container_name: neo4j-1
    labels:
      com.platys.name: neo4j
      com.platys.description: Native graph database management system
      com.platys.webui.title: Neo4J UI
      com.platys.webui.url: http://dataplatform:7474
      com.platys.password.envvars: PLATYS_NEO4J_PASSWORD
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      - NEO4J_server_bolt_listen__address=0.0.0.0:7687
      - NEO4J_AUTH=neo4j/${PLATYS_NEO4J_PASSWORD:-abc123abc123}
      - NEO4J_PLUGINS=[""]
      - NEO4J_dbms_security_allow__csv__import__from__file__urls=False
      - NEO4J_server_directories_import=
      - NEO4J_server_logs_debug_enabled=False
      - EXTENSION_SCRIPT=
      - NEO4J_apoc_export_file_enabled=False
      - NEO4J_apoc_import_file_enabled=False
      - NEO4J_apoc_import_file_use__neo4j__config=True
      - NEO4J_apoc_import_file_allow__read__from__filesystem=False
      - NEO4J_apoc_trigger_enabled=False
      - NEO4J_apoc_trigger_refresh=60000
    volumes:
      - ./data-transfer:/data-transfer
      - ./init/neo4j:/init
    restart: unless-stopped
    healthcheck:
      test: [CMD-SHELL, wget --no-verbose --tries=1 --spider localhost:7474 || exit 1]
      interval: 15s
      timeout: 30s
      retries: 10
  #  ================================== GraphDB ========================================== #
  graphdb-1:
    image: khaller/graphdb-free:10.8.4
    hostname: graphdb-1
    container_name: graphdb-1
    labels:
      com.platys.name: graphdb
      com.platys.description: Triple/RDF Store
      com.platys.webui.title: GraphDBs UI
      com.platys.webui.url: http://dataplatform:17200
    ports:
      - 17200:7200
    environment:
      GDB_HEAP_SIZE: 2G
      GDB_JAVA_OPTS: >-
        -Xmx2g -Xms2g
        -Dgraphdb.home=/opt/graphdb
        -Dgraphdb.workbench.importDirectory=/opt/graphdb/examples
        -Dgraphdb.workbench.cors.enable=true
        -Denable-context-index=true
        -Dentity-pool-implementation=transactional
        -Dhealth.max.query.time.seconds=60
        -Dgraphdb.append.request.id.headers=true
        -Dreuse.vars.in.subselects=true
    volumes:
      - ./data-transfer:/data-transfer
      - ./init/graphdb:/repository.init/
    restart: unless-stopped
  #  ================================== InfluxData Telegraf ========================================== #
  telegraf:
    image: telegraf:1.34
    container_name: telegraf
    hostname: telegraf
    labels:
      com.platys.name: telegraf
      com.platys.description: Agent for collecting, processing, aggregating, and writing metrics
    environment:
      HOSTNAME: telegraf
      INFLUXDB_TOKEN: ${PLATYS_INFLUXDB_TOKEN:-6Lv_ywMeuGfLOv4wa0aUz3uGOFPHERPGTOF4GsXobyYgEGIag2D3q8CJ0a91VTakjMtUp3nUuufGOJxrDe_32A==}
      INFLUXDB_ORGANIZATION: demo
      INFLUXDB_BUCKET: demo-bucket
    volumes:
      - ./data-transfer:/data-transfer
      - ./conf/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      # Mount for Docker API access
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
  #  ================================== InfluxDB 2 ========================================== #
  influxdb2:
    image: influxdb:2.7
    hostname: influxdb2
    container_name: influxdb2
    labels:
      com.platys.name: influxdb2
      com.platys.description: Timeseries Database
      com.platys.webui.title: InfluxDB 2.0 UI
      com.platys.webui.url: http://dataplatform:19999
      com.platys.restapi.title: InfluxDB 2.0 Rest API
      com.platys.restapi.url: http://dataplatform:19999/api/v2
    ports:
      - 19999:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: influx
      DOCKER_INFLUXDB_INIT_PASSWORD: abc123abc123!
      DOCKER_INFLUXDB_INIT_ORG: demo
      DOCKER_INFLUXDB_INIT_BUCKET: demo-bucket
      DOCKER_INFLUXDB_INIT_RETENTION: 1w
    volumes:
      - ./data-transfer:/data-transfer
      - ./init/influxdb2:/docker-entrypoint-initdb.d
    command: --reporting-disabled
    restart: unless-stopped
  #  ================================== DbGate ========================================== #
  dbgate:
    image: dbgate/dbgate:latest
    container_name: dbgate
    hostname: dbgate
    labels:
      com.platys.name: dbgate
      com.platys.description: Open Source DB Management Tool
      com.platys.webui.title: DbGate UI
      com.platys.webui.url: http://dataplatform:28120
      com.platys.password.envvars: PLATYS_DBGATE_PASSWORD
    ports:
      - 28120:3000
    environment:
      LOG_LEVEL: info
      LOGIN: dbgate
      PASSWORD: ${PLATYS_DBGATE_PASSWORD:-abc123!}
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  #  ================================== Mosquitto ========================================== #
  mosquitto-1:
    image: eclipse-mosquitto:2.0
    hostname: mosquitto-1
    container_name: mosquitto-1
    labels:
      com.platys.name: mosquitto
      com.platys.description: MQTT Broker
    ports:
      - 1883:1883
      - 9101:9001
    volumes:
      - ./data-transfer:/data-transfer
      - ./conf/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    restart: unless-stopped
  #  ================================== MQTTX Web ========================================== #
  mqttx-cli:
    image: emqx/mqttx-cli:latest
    container_name: mqttx-cli
    hostname: mqttx-cli
    labels:
      com.platys.name: mqttx
      com.platys.description: a CLI for MQTT
    volumes:
      - ./data-transfer:/data-transfer
    entrypoint:
      - /bin/sh
      - -c
      - |
        while [ 1 -eq 1 ];do sleep 60;done
    restart: unless-stopped
  #  ================================== MQTT UI ========================================== #
  mqtt-ui:
    image: vergissberlin/hivemq-mqtt-web-client:latest
    container_name: mqtt-ui
    hostname: mqtt-ui
    labels:
      com.platys.name: hivemq-ui
      com.platys.description: MQTT UI
      com.platys.webui.title: HiveMQ UI
      com.platys.webui.url: http://dataplatform:28136
    ports:
      - 28136:80
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  #  ================================== Wetty ========================================== #
  wetty:
    image: wettyoss/wetty:latest
    container_name: wetty
    hostname: wetty
    labels:
      com.platys.name: wetty
      com.platys.description: A terminal window in Web-Browser
      com.platys.webui.title: WeTTY UI
      com.platys.webui.url: http://dataplatform:3001
    ports:
      - 3001:3000
    environment:
      - SSHHOST=${DOCKER_HOST_IP}
      - SSHPORT=22
      - SSHUSER=
      - SSHAUTH=password
      - PORT=3000
      - BASE=/
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  #  ================================== markdown-viewer ========================================== #
  markdown-viewer:
    image: dannyben/madness:latest
    container_name: markdown-viewer
    hostname: markdown-viewer
    labels:
      com.platys.name: markdown-viewer
      com.platys.description: Platys Platform homepage viewer
      com.platys.webui.title: Markdown Viewer UI
      com.platys.webui.url: http://dataplatform:80
    ports:
      - 80:3000
    volumes:
      - ./artefacts:/docs
      - ./conf/markdown-viewer/markdown-madness.yml:/docs/.madness.yml
      - ./data-transfer:/data-transfer
    command: server
    restart: unless-stopped
    healthcheck:
      test: [CMD-SHELL, curl -f http://markdown-viewer:3000 || exit 1]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 1m
  markdown-renderer:
    image: trivadis/jinja2-renderer:latest
    container_name: markdown-renderer
    hostname: markdown-renderer
    labels:
      com.platys.name: markdown-renderer
      com.platys.description: Platys Platform homepage rendering
    environment:
      USE_PUBLIC_IP: 'True'
      PUBLIC_IP: ${PUBLIC_IP}
      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
      DATAPLATFORM_HOME: ${DATAPLATFORM_HOME}
      PLATYS_PLATFORM_NAME: nosql-platform
      PLATYS_PLATFORM_STACK: trivadis/platys-modern-data-platform
      PLATYS_PLATFORM_STACK_VERSION: develop
      PLATYS_COPY_COOKBOOK_DATA: 'False'
      SERVICE_LIST_VERSION: 2
    volumes:
      - ./artefacts/templates:/templates
      - ./artefacts/templates:/scripts
      - .:/variables
      - ./artefacts:/output
      - ./data-transfer:/data-transfer
    init: true
volumes:
  data-transfer-vol:
    name: data_transfer_vol
