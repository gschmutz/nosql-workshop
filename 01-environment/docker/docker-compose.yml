# =======================================================================
# Platform Name            nosql-platform
# Platform Stack:          trivadis/platys-modern-data-platform
# Platform Stack Version:  1.16.0-preview
# =======================================================================
version: '3.5'
networks:
  default:
    name: nosql-platform
#  
services:
  #  ================================== Zeppelin ========================================== #
  zeppelin:
    image: trivadis/apache-zeppelin:0.10.1-spark3.1.3-hadoop3.2
    container_name: zeppelin
    hostname: zeppelin
    labels:
      com.platys.name: zeppelin
      com.platys.webui.title: Apache Zeppelin UI
      com.platys.webui.url: http://${PUBLIC_IP}:28080
    ports:
      - 28080:8080
      - 6060:6060
      - 5050:5050
      - 4050-4054:4050-4054
    env_file:
      - ./conf/hadoop.env
    environment:
      SPARK_INSTALL_JARS_PACKAGES: ',io.delta:delta-core_2.12:1.0.1,io.delta:delta-storage:1.0.1,org.apache.iceberg:iceberg-spark-runtime-3.1_2.12:1.1.0,org.apache.hudi:hudi-spark3.1-bundle_2.12:0.13.0'
      SPARK_DEFAULTS_CONF_spark_jars_repositories:
      SPARK_DEFAULTS_CONF_spark_jars_packages: ''
      SPARK_DEFAULTS_CONF_spark_jars_excludes:
      SPARK_DEFAULTS_CONF_spark_jars:
      SPARK_DEFAULTS_CONF_spark_jars_ivySettings:
      SPARK_DEFAULTS_CONF_spark_sql_catalogImplementation: in-memory
      CORE_CONF_fs_defaultFS: file:///tmp
      SPARK_DEFAULTS_CONF_spark_sql_warehouse_dir:
      SPARK_DEFAULTS_CONF_spark_yarn_dist_files: /spark/conf/hive-site.xml
      SPARK_DEFAULTS_CONF_spark_driver_extraJavaOptions:
      SPARK_DEFAULTS_CONF_spark_executor_extraJavaOptions:
      ZEPPELIN_ADDR: 0.0.0.0
      ZEPPELIN_PORT: '8080'
      ZEPPELIN_MEM: -Xms1024m -Xmx1024m -XX:MaxMetaspaceSize=512m
      ZEPPELIN_INTERPRETER_CONNECT_TIMEOUT: 120000
      ZEPPELIN_INTERPRETER_DEP_MVNREPO: https://repo.maven.apache.org/maven2
      ZEPPELIN_ADMIN_USERNAME: admin
      ZEPPELIN_ADMIN_PASSWORD: abc123!
      ZEPPELIN_USER_USERNAME: zeppelin
      ZEPPELIN_USER_PASSWORD: abc123!
      # set spark-master for Zeppelin interpreter
      ZEPPELIN_SPARK_MASTER: spark://spark-master:7077
      ZEPPELIN_NOTEBOOK_DIR: notebook
      ZEPPELIN_NOTEBOOK_CRON_ENABLE: 'True'
      PYSPARK_PYTHON: python3
      SPARK_SUBMIT_OPTIONS: ' --conf spark.ui.port=4050 --conf spark.driver.host=zeppelin --conf spark.driver.port=5050 --conf spark.driver.bindAddress=0.0.0.0 --conf spark.blockManager.port=6060 --conf spark.driver.extraJavaOptions=-Dcom.amazonaws.services.s3.enableV4 --conf spark.executor.extraJavaOptions=-Dcom.amazonaws.services.s3.enableV4'
    volumes:
      - ./data-transfer:/data-transfer
      - ./plugins/spark/jars:/extra-jars
      - ./container-volume/spark/logs/:/var/log/spark/logs
      - ./conf/awscli/s3cfg.template:/root/.s3cfg.template
    restart: unless-stopped
  #  ================================== Jupyter ========================================== #
  jupyter:
    image: jupyter/minimal-notebook:latest
    container_name: jupyter
    hostname: jupyter
    labels:
      com.platys.name: jupyter
      com.platys.webui.title: Jupyter UI
      com.platys.webui.url: http://${PUBLIC_IP}:28888
    ports:
      - 28888:8888
      - 14040-14044:4040-4044
    user: root
    environment:
      JUPYTER_ENABLE_LAB: "'yes'"
      GRANT_SUDO: "'yes'"
      DOCKER_STACKS_JUPYTER_CMD: lab
    volumes:
      - ./data-transfer:/data-transfer
    # - ./custom-conf/jupyter/spark-defaults.conf:/usr/local/spark-3.1.1-bin-hadoop3.2/conf/spark-defaults.conf
    command:
      # In the command section, $ are replaced with $$ to avoid the error 'Invalid interpolation format for "command" option'
      - bash
      - -c
      - |
        start-notebook.sh
    restart: unless-stopped
  #  ================================== Redis ========================================== #
  redis-1:
    image: bitnami/redis:7.0
    hostname: redis-1
    container_name: redis-1
    labels:
      com.platys.name: redis
    ports:
      - 6379:6379
    environment:
      - REDIS_REPLICATION_MODE=master
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PASSWORD=abc123!
      - REDIS_AOF_ENABLED=no
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: redis-insight
    hostname: redis-insight
    labels:
      com.platys.name: redis-insight
      com.platys.webui.title: Redis Insight UI
      com.platys.webui.url: http://${PUBLIC_IP}:28174
    ports:
      - 28174:8001
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    hostname: redis-commander
    labels:
      com.platys.name: redis-commander
      com.platys.webui.title: Redis Commander UI
      com.platys.webui.url: http://${PUBLIC_IP}:28119
    ports:
      - 28119:8081
    environment:
      - REDIS_HOST=redis-1
      - REDIS_PORT=6379
      - REDIS_PASSWORD='abc123!'
      - REDIS_DB=0
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  #  ================================== Cassandra ========================================== #
  cassandra-1:
    image: bitnami/cassandra:4.1
    container_name: cassandra-1
    hostname: cassandra-1
    labels:
      com.platys.name: cassandra
    ports:
      - 29042:9042
      - 7199:7199
      - 9160:9160
    environment:
      - CASSANDRA_CLUSTER_NAME="Test Cluster"
      - CASSANDRA_DATACENTER=se1
      - CASSANDRA_PASSWORD_SEEDER=yes
      - CASSANDRA_USER=cassandra
      - CASSANDRA_PASSWORD=cassandra
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_NUM_TOKENS=128
      - LOCAL_JMX=no
    volumes:
      - ./data-transfer:/data-transfer
      - ./conf/cassandra/jmxremote.access:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/management/jmxremote.access
      - ./conf/cassandra/jmxremote.password:/etc/cassandra/jmxremote.password
    restart: unless-stopped
  cassandra-web:
    image: trivadis/cassandra-web
    container_name: cassandra-web
    hostname: cassandra-web
    labels:
      com.platys.name: cassandra-web
      com.platys.webui.title: Cassandra Web UI
      com.platys.webui.url: http://${PUBLIC_IP}:28120
    ports:
      - 28120:3000
    environment:
      - CASSANDRA_HOSTNAME=cassandra-1
      - CASSANDRA_PORT=9042
      - CASSANDRA_USERNAME=cassandra
      - CASSANDRA_PASSWORD=cassandra
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  #  ================================== MongoDB ========================================== #
  mongo-1:
    image: mongo:6.0
    container_name: mongo-1
    hostname: mongo-1
    labels:
      com.platys.name: mongodb
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=abc123!
      - MONGO_INITDB_DATABASE=sample
      - MONGO_INITDB_USERNAME=admin
      - MONGO_INITDB_PASSWORD=admin
    volumes:
      - ./data-transfer:/data-transfer
      # seeding scripts
      - ./conf/mongo-entrypoint:/docker-entrypoint-initdb.d
    restart: unless-stopped
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    hostname: mongo-express
    labels:
      com.platys.name: mongo-express
      com.platys.webui.title: Mongo Express UI
      com.platys.webui.url: http://${PUBLIC_IP}:28123
    ports:
      - 28123:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo-1
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=abc123!
      - ME_CONFIG_OPTIONS_EDITORTHEME=default
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  admin-mongo:
    image: adicom/admin-mongo:latest
    container_name: admin-mongo
    hostname: admin-mongo
    labels:
      com.platys.name: admin-mongo
      com.platys.webui.title: Admin Mongo UI
      com.platys.webui.url: http://${PUBLIC_IP}:28124
    ports:
      - 28124:1234
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  #  ================================== Elasticsearch ========================================== #
  elasticsearch-1:
    image: elasticsearch:8.7.0
    hostname: elasticsearch-1
    container_name: elasticsearch-1
    labels:
      com.platys.name: elasticsearch
      com.platys.restapi.title: Elasticsearch REST API
      com.platys.restapi.url: http://${PUBLIC_IP}:9200
      com.platys.manual.step.msgs: sudo sysctl -w vm.max_map_count=262144
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: single-node
      xpack.security.enabled: 'false'
      xpack.monitoring.collection.enabled: 'false'
      http.cors.enabled: 'true'
      http.cors.allow-origin: http://${DOCKER_HOST_IP}:28275,http://${PUBLIC_IP}:28275,http://dejavu:1358,http://dataplatform:28125,http://dataplatform:28125,http://${PUBLIC_IP}:28125,http://${DOCKER_HOST_IP}:28125,http://127.0.0.1:1358
      http.cors.allow-headers: X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      http.cors.allow-credentials: 'true'
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  dejavu:
    image: appbaseio/dejavu:latest
    container_name: dejavu
    hostname: dejuvu
    labels:
      com.platys.name: dejavu
      com.platys.webui.title: Elasticsearch Dejavu UI
      com.platys.webui.url: http://${PUBLIC_IP}:28125
    ports:
      - 28125:1358
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  cerebro:
    image: lmenezes/cerebro:latest
    container_name: cerebro
    hostname: cerebro
    labels:
      com.platys.name: cerbero
      com.platys.webui.title: Elasticsearch Cerbero UI
      com.platys.webui.url: http://${PUBLIC_IP}:28126
    ports:
      - 28126:9000
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  elastichq:
    image: elastichq/elasticsearch-hq:latest
    container_name: elastichq
    hostname: elatichq
    labels:
      com.platys.name: elastichq
      com.platys.webui.title: ElasticHQ UI
      com.platys.webui.url: http://${PUBLIC_IP}:28127
    ports:
      - 28127:5000
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  #  ================================== ElasticVue ========================================== #
  elasticvue:
    image: cars10/elasticvue:latest
    container_name: elasticvue
    hostname: elasticvue
    labels:
      com.platys.name: elasticvue
      com.platys.webui.title: ElasticVue UI
      com.platys.webui.url: http://${PUBLIC_IP}:28275
    ports:
      - 28275:8080
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  #  ================================== Kibana ========================================== #
  kibana:
    image: kibana:8.7.0
    hostname: kibana
    container_name: kibana
    labels:
      com.platys.name: kibana
      com.platys.webui.title: Kibana UI
      com.platys.webui.url: http://${PUBLIC_IP}:5601
    depends_on:
      - elasticsearch-1
    ports:
      - 5601:5601
    environment:
      discovery.type: single-node
      ELASTICSEARCH_HOSTS: http://elasticsearch-1:9200
      SERVER_HOST: 0.0.0.0
      SERVER_NAME: kibana
      XPACK_GRAPH_enabled: 'false'
      XPACK_MONITORING_enabled: 'false'
      XPACK_REPORTING_enabled: 'false'
      XPACK_SECURITY_enabled: 'false'
    volumes:
      - ./data-transfer:/data-transfer
    command: [/bin/bash, -c, /usr/share/kibana/bin/kibana-plugin remove x-pack; /usr/local/bin/kibana-docker]
    restart: unless-stopped
  #  ================================== Neo4J ========================================== #
  neo4j-1:
    image: neo4j:5
    hostname: neo4j-1
    container_name: neo4j-1
    labels:
      com.platys.name: neo4j
      com.platys.webui.title: Neo4J UI
      com.platys.webui.url: http://${PUBLIC_IP}:7474
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      - NEO4J_AUTH=neo4j/abc123abc123
      - NEO4JLABS_PLUGINS=[""]
      - NEO4J_dbms_logs_debug_level=INFO
      - EXTENSION_SCRIPT=
    volumes:
      - ./data-transfer:/data-transfer
      - ./init/neo4j:/init
      - ./plugins/neo4j/:/plugins:rw
    restart: unless-stopped
  #  ================================== InfluxDB 2 ========================================== #
  influxdb2:
    image: influxdb:2.7
    hostname: influxdb2
    container_name: influxdb2
    labels:
      com.platys.name: influxdb2
      com.platys.webui.title: InfluxDB 2.0 UI
      com.platys.webui.url: http://${PUBLIC_IP}:19999
      com.platys.restapi.title: InfluxDB 2.0 Rest API
      com.platys.restapi.url: http://${PUBLIC_IP}:19999/api/v2
    ports:
      - 19999:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: influx
      DOCKER_INFLUXDB_INIT_PASSWORD: abc123abc123!
      DOCKER_INFLUXDB_INIT_ORG: demo
      DOCKER_INFLUXDB_INIT_BUCKET: demo-bucket
      DOCKER_INFLUXDB_INIT_RETENTION: 1w
    volumes:
      - ./data-transfer:/data-transfer
    command: --reporting-disabled
    restart: unless-stopped
  #  ================================== PostgreSQL ========================================== #
  postgresql:
    image: postgres:15
    container_name: postgresql
    hostname: postgresql
    labels:
      com.platys.name: postgresql
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=abc123!
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_MULTIPLE_DATABASES=demodb
      - POSTGRES_MULTIPLE_USERS=demo
      - POSTGRES_MULTIPLE_PASSWORDS=abc123!
      - POSTGRES_MULTIPLE_ADDL_ROLES=
      - PGDATA=/var/lib/postgresql/data/pgdata
      - DB_SCHEMA=demo
    volumes:
      - ./data-transfer:/data-transfer
      - ./init/postgresql:/docker-entrypoint-initdb.d/
    restart: unless-stopped
  #  ================================== Adminer ========================================== #
  adminer:
    image: adminer:latest
    container_name: adminer
    hostname: adminer
    labels:
      com.platys.name: adminer
      com.platys.webui.title: Adminer UI
      com.platys.webui.url: http://${PUBLIC_IP}:28131
    ports:
      - 28131:8080
    volumes:
      - ./data-transfer:/data-transfer
    command: php -S 0.0.0.0:8080 -t /var/www/html
    restart: unless-stopped
  #  ================================== Cloudbeaver ========================================== #
  cloudbeaver:
    image: dbeaver/cloudbeaver:latest
    container_name: cloudbeaver
    hostname: cloudbeaver
    labels:
      com.platys.name: cloudbeaver
      com.platys.webui.title: Cloudbeaver UI
      com.platys.webui.url: http://${PUBLIC_IP}:8978
    ports:
      - 8978:8978
    volumes:
      - ./data-transfer:/data-transfer
      - ./conf/cloudbeaver/data-sources.json:/opt/cloudbeaver/workspace/GlobalConfiguration/.dbeaver/data-sources.json
    restart: unless-stopped
  #  ================================== Grafana ========================================== #
  grafana:
    image: grafana/grafana:9.3.11
    hostname: grafana
    container_name: grafana
    labels:
      com.platys.name: grafana
      com.platys.webui.title: Grafana UI
      com.platys.webui.url: http://${PUBLIC_IP}:3000
    expose:
      - 3000
    ports:
      - 3000:3000
    environment:
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=abc123!
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_FEATURE_TOGGLES_ENABLE=
    volumes:
      - ./data-transfer:/data-transfer
      - ./scripts/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./scripts/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./plugins/grafana/plugins:/var/lib/grafana/plugins
    restart: unless-stopped
  #  ================================== Wetty ========================================== #
  wetty:
    image: wettyoss/wetty:latest
    container_name: wetty
    hostname: wetty
    labels:
      com.platys.name: wetty
      com.platys.webui.title: WeTTY UI
      com.platys.webui.url: http://${PUBLIC_IP}:3001
    ports:
      - 3001:3000
    environment:
      - SSHHOST=${DOCKER_HOST_IP}
      - SSHPORT=22
      - SSHUSER=
      - SSHAUTH=password
      - PORT=3000
      - BASE=/
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  #  ================================== markdown-viewer ========================================== #
  markdown-viewer:
    image: trivadis/markdown-web:latest
    container_name: markdown-viewer
    hostname: markdown-viewer
    labels:
      com.platys.name: markdown-viewer
      com.platys.webui.title: Markdown Viewer UI
      com.platys.webui.url: http://${PUBLIC_IP}:80
    ports:
      - 80:80
    volumes:
      - ./artefacts:/home/python/markdown
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  markdown-renderer:
    image: trivadis/jinja2-renderer:latest
    container_name: markdown-renderer
    hostname: markdown-renderer
    labels:
      com.platys.name: markdown-renderer
    environment:
      USE_PUBLIC_IP: 'True'
      PUBLIC_IP: ${PUBLIC_IP}
      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
      DATAPLATFORM_HOME: ${DATAPLATFORM_HOME}
      PLATYS_PLATFORM_NAME: nosql-platform
      PLATYS_PLATFORM_STACK: trivadis/platys-modern-data-platform
      PLATYS_PLATFORM_STACK_VERSION: 1.16.0-preview
      PLATYS_COPY_COOKBOOK_DATA: 'False'
    volumes:
      - ./artefacts/templates:/templates
      - ./artefacts/templates:/scripts
      - .:/variables
      - ./artefacts:/output
      - ./data-transfer:/data-transfer
volumes:
  data-transfer-vol:
    name: data_transfer_vol
